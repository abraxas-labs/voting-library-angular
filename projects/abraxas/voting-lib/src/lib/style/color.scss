@use 'sass:map';
@use '@abraxas/base-components/src/lib/styles/predefined/default.palette' as default;
@use '@abraxas/base-components/src/lib/styles/settings' as settings;

// returns the color as a CSS variable
// needed due to whitelabling, as the color may change depending on the theme
@function theme-color($name) {
  @return var(--color-#{$name});
}

$color-primary: theme-color('primary');

$color-primary-10: theme-color('primary-10');
$color-primary-20: theme-color('primary-20');
$color-primary-25: theme-color('primary-25');
$color-primary-50: theme-color('primary-50');
$color-primary-70: theme-color('primary-70');
$color-primary-75: theme-color('primary-75');

$color-error: theme-color('error');
$color-success: theme-color('success');
$color-warning: theme-color('warning');
$color-info: theme-color('info');

$color-error-10: theme-color('error-10');
$color-success-10: theme-color('success-10');
$color-warning-10: theme-color('warning-10');
$color-info-10: theme-color('info-10');

$color-error-25: theme-color('error-25');
$color-success-25: theme-color('success-25');
$color-warning-25: theme-color('warning-25');
$color-info-25: theme-color('info-25');

// Defines the CSS variable values
@mixin theme-colors($theme-palette: ()) {
  $theme-palette: map.deep-merge(default.$default-palette, $theme-palette);
  $theme-color-primary: map.get($theme-palette, core, primary);
  $theme-color-error: map.get($theme-palette, signal, error);
  $theme-color-success: map.get($theme-palette, signal, success);
  $theme-color-info: map.get($theme-palette, signal, info);
  $theme-color-warning: map.get($theme-palette, signal, warning);

  --color-primary: #{$theme-color-primary};
  --color-primary-10: #{settings.tint($theme-color-primary, 10%)};
  --color-primary-20: #{settings.tint($theme-color-primary, 20%)};
  --color-primary-25: #{settings.tint($theme-color-primary, 25%)};
  --color-primary-50: #{settings.tint($theme-color-primary, 50%)};
  --color-primary-70: #{settings.tint($theme-color-primary, 70%)};
  --color-primary-75: #{settings.tint($theme-color-primary, 75%)};
  --color-error: #{$theme-color-error};
  --color-error-10: #{settings.tint($theme-color-error, 10%)};
  --color-error-25: #{settings.tint($theme-color-error, 25%)};
  --color-success: #{$theme-color-success};
  --color-success-10: #{settings.tint($theme-color-success, 10%)};
  --color-success-25: #{settings.tint($theme-color-success, 25%)};
  --color-info: #{$theme-color-info};
  --color-info-10: #{settings.tint($theme-color-info, 10%)};
  --color-info-25: #{settings.tint($theme-color-info, 25%)};
  --color-warning: #{$theme-color-warning};
  --color-warning-10: #{settings.tint($theme-color-warning, 10%)};
  --color-warning-25: #{settings.tint($theme-color-warning, 25%)};
}

// legacy colors
$color-grey-1: #232323;
$color-grey-2: #575757;
$color-grey-3: #777;
$color-grey-4: #a1a1a1;
$color-grey-5: #ccc;
$color-grey-7: #f7f7f7;
$color-grey-6: #e0e0e0;
$color-white: #fff;
$color-black: #000;

$states: (
  // initial
  1: #f2f2f2,
  // in Erfassung
  2: #fbe5c4,
  // zur Kontrolle
  3: #fec6c3,
  // übermittelt
  4: #c4e6c3,
  // Kontrolle beendet
  5: #c4e6c3,
  // Vorläufig geprüft
  6: #98d3f1,
  // Alles plausibilisiert
  7: #bb6bd9
);

@each $name, $color in $states {
  .result-state-#{$name} {
    background-color: $color;
    color: $color-grey-1;
  }
}
